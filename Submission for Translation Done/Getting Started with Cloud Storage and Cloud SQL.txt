LAB: Google Cloud Fundamentals: Getting Started With Compute Engine

OBJECTIVES:
In this lab, you will learn how to perform the following tasks:

- Create a Compute Engine virtual machine instance using the Google Cloud Platform(GCP) Console.
- Create a Compute Engine virtual machine using the instance using the gcloud command-line interface.
- Connect between the two instances.
- Use the image in the Cloud Storage bucket on a web page.

TASK 1. Sign in to the Google Cloud Platform (GCP) Console:

	gcloud auth login student-02-0d094491b220@qwiklabs.net --no-launch-browser
	

TASK 2. Deploy a web server VM instance:

	gcloud compute instances create blogpost --machine-type "n1-standard-1" --image-project "debian-cloud" --image"debian-9-stretch-v20190213" --subnet "default" --tags http  http-server \
        
	--metadata startup-script="
	apt-get update
	apt-get install apache2 php php-mysql -y
	service apache2 restart	

	gcloud compute firewall-rules create allow-http --action=ALLOW --destination-INGRESS --rules=http:80 --target-tags=http
	
	
TASK 3.  Create a Cloud Storage bucket using the gsutil command line:

    1. 	For convenience, enter your chosen location into an environment variable called LOCATION. Enter one of these commands:

		export LOCATION=US
    
    2. In Cloud Shell, the DEVSHELL_PROJECT_ID environment variable contains your project ID. Enter this command to make a bucket named after your project ID:

		gsutil mb -l $LOCATION gs://$DEVSHELL_PROJECT_ID

    3. Retrieve a banner image from a publicly accessible Cloud Storage location:

		gsutil cp gs://cloud-training/gcpfci/my-excellent-blog.png my-excellent-blog.png

    4. Copy the banner image to your newly created Cloud Storage bucket:

		gsutil cp my-excellent-blog.png gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

    5. Modify the Access Control List of the object you just created so that it is readable by everyone:

		gsutil acl ch -u allUsers:R gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

Task 4: Create the Cloud SQL instance:
 
		gcloud sql instances create blog-db --database-version=MYSQL_5_7 --root-password=mydbpword --region=us-central1 --zone=us-central1-a
	
	1. Click on the name of the instance, blog-db, to open its details page.
		
		gcloud sql instances describe blog-db
	
	2. From the SQL instances details page, copy the Public IP address for your SQL instance to a text editor for use later in this lab.
	
	3. Click on Users menu on the left-hand side, and then click ADD USER ACCOUNT.
	   For User name, type blogdbuser

		gcloud sql users create blogdbuser --instance=blog-db --password=userpw

	4. Click the Connections tab, and then click Add network.
	
		gcloud sql 


Task 5: Configure an application in a Compute Engine instance to use Cloud SQL:

	gcloud compute ssh blogpost
	
	1. n your ssh session on bloghost, change your working directory to the document root of the web server:

		cd /var/www/html

	2. Use the nano text editor to edit a file called index.php:

		sudo nano index.php

	3. Paste the content below into the file:

	<html>
		<head><title>Welcome to my excellent blog</title></head>
	<body>
		<h1>Welcome to my excellent blog</h1>
		<?php
		 $dbserver = "CLOUDSQLIP";
		$dbuser = "blogdbuser";
		$dbpassword = "DBPASSWORD";
		// In a production blog, we would not store the MySQL
		// password in the document root. Instead, we would store it in a
		// configuration file elsewhere on the web server VM instance.

		$conn = new mysqli($dbserver, $dbuser, $dbpassword);

		if (mysqli_connect_error()) {
	        echo ("Database connection failed: " . mysqli_connect_error());
		} else {
	        echo ("Database connection succeeded.");
		}
		?>
	</body></html>



	4. Press Ctrl+O, and then press Enter to save your edited file.

	5. Press Ctrl+X to exit the nano text editor.
	
	6. Restart the web server:

		sudo service apache2 restart

	7. Open a new web browser tab and paste into the address bar your bloghost VM instance's external IP address followed by /index.php. The URL will look like this:

		35.192.208.2/index.php

	- Be sure to use the external IP address of your VM instance followed by /index.php. Do not use the VM instance's internal IP address. Do not use the sample IP address shown here.

	- When you load the page, you will see that its content includes an error message beginning with the words:

		Database connection failed: ...

	8. Return to your ssh session on bloghost. Use the nano text editor to edit index.php again.

		sudo nano index.php

	9. In the nano text editor, replace CLOUDSQLIP with the Cloud SQL instance Public IP address that you noted above. Leave the quotation marks around the value in place.

	10. In the nano text editor, replace DBPASSWORD with the Cloud SQL database password that you defined above. Leave the quotation marks around the value in place.

	11. Press Ctrl+O, and then press Enter to save your edited file.

	12. Press Ctrl+X to exit the nano text editor.

	13. Restart the web server:

		sudo service apache2 restart

	14. Return to the web browser tab in which you opened your bloghost VM instance's external IP address. When you load the page, the following message appears:

		Database connection succeeded.

Task 6: Configure an application in a Compute Engine instance to use a Cloud Storage object

	1. In the GCP Console, click Storage > Browser.

	2. Click on the bucket that is named after your GCP project.

	3. In this bucket, there is an object called my-excellent-blog.png. Copy the URL behind the link icon that appears in that object's Public access column, or behind the words "Public link" if shown.
		
	Enter the line below to ls and copy the pulic link. This solves STEP 1,2 and 3 above.
	
		gsutil ls -L -b gs://$DEVSHELL_PROJECT_ID/my-excellent-blog.png

	4. Return to your ssh session on your bloghost VM instance.
		
		gcloud compute ssh blogpost


	5. Enter this command to set your working directory to the document root of the web server:
	
		cd /var/www/html

	6. Use the nano text editor to edit index.php:

		sudo nano index.php

	7. Use the arrow keys to move the cursor to the line that contains the h1 element. Press Enter to open up a new, blank screen line, and then paste the URL you copied earlier into the line.

	8. Paste this HTML markup immediately before the URL:

		<img src='

	9.Place a closing single quotation mark and a closing angle bracket at the end of the URL:

		'>

	    - The resulting line will look like this:

		<img src='https://storage.googleapis.com/qwiklabs-gcp-0005e186fa559a09/my-excellent-blog.png'>

	    - The effect of these steps is to place the line containing <img src='...'> immediately before the line containing <h1>...</h1>


	10. Press Ctrl+O, and then press Enter to save your edited file.

	11. Press Ctrl+X to exit the nano text editor.

	12. Restart the web server:

		sudo service apache2 restart

	13. Return to the web browser tab in which you opened your bloghost VM instance's external IP address. When you load the page, its content now includes a banner image.
